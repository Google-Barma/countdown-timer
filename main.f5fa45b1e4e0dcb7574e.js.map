{"version":3,"sources":["webpack:///./index.js","webpack:///./js/countDownTimer.js"],"names":["selector","this","startBtn","document","querySelector","resetBtn","tenSecBtn","twentySecBtn","thirtySecBtn","wunHourBtn","wunDayBtn","days","hours","mins","secs","form","setDisabledTimeBtn","setAttribute","removeDisabledBtn","removeAttribute","setDisabledStartBtn","removeDisabledStartBtn","setStartTimeValue","ms","localStorage","setItem","converToDate","getStartTimeValue","getItem","setCurrentTimeValue","getCurrentTimeValue","textContent","parseInt","pad","Math","floor","value","String","padStart","resetTimeValue","toggleStartBtnToStart","stopTimer","removeItem","clearInterval","intervalId","countdown","setInterval","differenceTime","countdownTime","Date","now","startCountdown","continueCountdown","toggleStartBtnToPause","classList","replace","toggleStartBtnToContinue","contains","toggleStartBtnClass","timerInit","addEventListener","event","target","nodeName","dataset","time","console","dir","childNodes"],"mappings":"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","file":"main.f5fa45b1e4e0dcb7574e.js","sourcesContent":["import './styles.css';\n\nimport CountdownTimer from './js/countDownTimer';\n\nconst timer = new CountdownTimer({ selector: '#timer-1' });\n\ntimer.timerInit();\n","// Создайте таймер\n// Таймер можно выставить на 10с/20с/30с. ( У вас должно быть 3 кнопки с данными значениями)\n// У таймера должна быть возможность поставить на паузу, продолжить, сбросить, старт.\n//  Изначально должно быть всего 2 кнопки - старт и сбросить,\n// после старта таймера кнопка старта меняет состояние на пауза,\n// после нажатия на паузу кнопка меняет состояние на продолжить,\n// после нажатия на продолжить кнопка меняет состояние на пауза\n// после нажатия на сбросить кнопка старта снова имеет сочтояние старт\n\nexport default class CountdownTimer {\n  constructor({ selector }) {\n    this.startBtn = document.querySelector(`${selector} .btn__start`);\n    this.resetBtn = document.querySelector(`${selector} .btn__reset`);\n    this.tenSecBtn = document.querySelector(\n      `${selector} button[data-value=\"10sec\"]`,\n    );\n    this.twentySecBtn = document.querySelector(\n      `${selector} button[data-value=\"20sec\"]`,\n    );\n    this.thirtySecBtn = document.querySelector(\n      `${selector} button[data-value=\"30sec\"]`,\n    );\n    this.wunHourBtn = document.querySelector(\n      `${selector} button[data-value=\"1hours\"]`,\n    );\n    this.wunDayBtn = document.querySelector(\n      `${selector} button[data-value=\"1days\"]`,\n    );\n    this.days = document.querySelector(`${selector} .value[data-value=\"days\"]`);\n    this.hours = document.querySelector(\n      `${selector} .value[data-value=\"hours\"]`,\n    );\n    this.mins = document.querySelector(`${selector} .value[data-value=\"mins\"]`);\n    this.secs = document.querySelector(`${selector} .value[data-value=\"secs\"]`);\n    this.form = document.querySelector(`${selector}`);\n  }\n\n  setDisabledTimeBtn() {\n    // this.form.childNodes[3].childNodes[1].childNodes.forEach(item => {\n    //   if (item !== 'text') {\n    //     console.log(item);\n    //     // item.setAttribute('disabled', 'disabled');\n    //   }\n    // });\n    this.tenSecBtn.setAttribute('disabled', 'disabled');\n    this.twentySecBtn.setAttribute('disabled', 'disabled');\n    this.thirtySecBtn.setAttribute('disabled', 'disabled');\n    this.wunHourBtn.setAttribute('disabled', 'disabled');\n    this.wunDayBtn.setAttribute('disabled', 'disabled');\n  }\n\n  removeDisabledBtn() {\n    this.tenSecBtn.removeAttribute('disabled');\n    this.twentySecBtn.removeAttribute('disabled');\n    this.thirtySecBtn.removeAttribute('disabled');\n    this.wunHourBtn.removeAttribute('disabled');\n    this.wunDayBtn.removeAttribute('disabled');\n  }\n\n  setDisabledStartBtn() {\n    this.startBtn.setAttribute('disabled', 'disabled');\n  }\n\n  removeDisabledStartBtn() {\n    this.startBtn.removeAttribute('disabled');\n  }\n\n  setStartTimeValue(ms) {\n    localStorage.setItem('startTimeValue', +ms);\n    this.converToDate(ms);\n  }\n\n  getStartTimeValue() {\n    return localStorage.getItem('startTimeValue');\n  }\n\n  setCurrentTimeValue(ms) {\n    localStorage.setItem('currentValue', ms);\n  }\n\n  getCurrentTimeValue() {\n    return localStorage.getItem('currentValue');\n  }\n\n  converToDate(ms) {\n    this.days.textContent = `0${parseInt(ms / 1000 / 3600 / 24)}`;\n    this.hours.textContent = this.pad(Math.floor((ms / 1000 / 3600) % 24));\n    this.mins.textContent = this.pad(Math.floor((ms / 1000 / 60) % 60));\n    this.secs.textContent = this.pad(Math.floor((ms / 1000) % 60));\n  }\n\n  pad(value) {\n    return String(value).padStart(2, 0);\n  }\n\n  resetTimeValue() {\n    this.toggleStartBtnToStart();\n    this.stopTimer();\n    this.removeDisabledBtn();\n    this.days.textContent = '00';\n    this.hours.textContent = '00';\n    this.mins.textContent = '00';\n    this.secs.textContent = '00';\n\n    localStorage.removeItem('startTimeValue');\n    localStorage.removeItem('currentValue');\n\n    this.setDisabledStartBtn();\n  }\n\n  stopTimer() {\n    clearInterval(this.intervalId);\n  }\n\n  countdown() {\n    this.intervalId = setInterval(() => {\n      this.differenceTime = this.countdownTime - Date.now();\n\n      if (this.differenceTime <= 999) {\n        this.resetTimeValue();\n      }\n\n      this.setCurrentTimeValue(this.differenceTime);\n      this.converToDate(this.differenceTime);\n    }, 1000);\n  }\n\n  startCountdown() {\n    this.countdownTime = +this.getStartTimeValue() + Date.now();\n\n    this.countdown();\n  }\n\n  continueCountdown() {\n    this.countdownTime = +this.getCurrentTimeValue() + Date.now();\n\n    this.countdown();\n  }\n\n  // startCountdown() {\n  //   this.countdownTime = this.getStartTimeValue + Date.now();\n\n  //   this.interval = setTimeout(function tickTack() {\n  //     this.interval = setTimeout(tickTack, 1000);\n\n  //     this.differenceTime = this.countdownTime - Date.now();\n  //     this.converToDate(this.differenceTime);\n  //   }, 1000);\n  // }\n\n  toggleStartBtnToPause() {\n    this.startBtn.classList.replace('btn__continue', 'btn__pause');\n    this.startBtn.textContent = 'Пауза';\n  }\n\n  toggleStartBtnToContinue() {\n    this.startBtn.classList.replace('btn__pause', 'btn__continue');\n    this.startBtn.textContent = 'Продолжить';\n  }\n\n  toggleStartBtnToStart() {\n    if (this.startBtn.classList.contains('btn__pause')) {\n      this.startBtn.classList.replace('btn__pause', 'btn__start');\n    }\n    if (this.startBtn.classList.contains('btn__continue')) {\n      this.startBtn.classList.replace('btn__continue', 'btn__start');\n    }\n    this.startBtn.textContent = 'Старт';\n  }\n\n  toggleStartBtnClass() {\n    if (this.startBtn.classList.contains('btn__start')) {\n      this.startBtn.classList.replace('btn__start', 'btn__pause');\n      this.toggleStartBtnToPause();\n      this.startCountdown();\n    } else if (this.startBtn.classList.contains('btn__pause')) {\n      this.toggleStartBtnToContinue();\n      this.stopTimer();\n    } else if (this.startBtn.classList.contains('btn__continue')) {\n      this.toggleStartBtnToPause();\n      this.continueCountdown();\n    }\n  }\n\n  timerInit() {\n    this.form.addEventListener('click', event => {\n      const target = event.target;\n      if (target.nodeName !== 'BUTTON') {\n        return;\n      }\n\n      if (\n        target.dataset.value !== 'start' &&\n        target.dataset.value !== 'reset'\n      ) {\n        const ms = target.dataset.time;\n        this.setStartTimeValue(ms);\n        this.removeDisabledStartBtn();\n      }\n\n      if (target.dataset.value === 'start') {\n        this.setDisabledTimeBtn();\n        this.toggleStartBtnClass();\n      }\n\n      if (target.dataset.value === 'reset') {\n        this.resetTimeValue();\n      }\n      console.dir(this.form.childNodes[3].childNodes[1].childNodes);\n    });\n  }\n}\n"],"sourceRoot":""}