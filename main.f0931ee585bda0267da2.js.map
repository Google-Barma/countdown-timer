{"version":3,"sources":["webpack:///./index.js","webpack:///./js/countDownTimer.js"],"names":["timer","selector","this","startBtn","document","querySelector","resetBtn","tenSecBtn","twentySecBtn","thirtySecBtn","wunHourBtn","wunDayBtn","days","hours","mins","secs","form","_setDisabledTimeBtn","setAttribute","_removeDisabledBtn","removeAttribute","_setDisabledStartBtn","_removeDisabledStartBtn","_setStartTimeValue","ms","localStorage","setItem","_converToDate","_getStartTimeValue","getItem","_setCurrentTimeValue","_getCurrentTimeValue","textContent","parseInt","_pad","Math","floor","value","String","padStart","_resetTimeValue","_toggleStartBtnToStart","_stopTimer","removeItem","clearInterval","intervalId","_countdown","setInterval","differenceTime","countdownTime","Date","now","_startCountdown","_continueCountdown","_toggleStartBtnToPause","classList","replace","_toggleStartBtnToContinue","contains","_toggleStartBtnClass","timerInit","addEventListener","event","target","nodeName","dataset","time","console","log"],"mappings":"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","file":"main.f0931ee585bda0267da2.js","sourcesContent":["import './styles.css';\n\nimport CountdownTimer from './js/countDownTimer';\n\nconst timer = new CountdownTimer({ selector: '#timer-1' });\n\ntimer.timerInit();\n\nconsole.log(timer);\n","export default class CountdownTimer {\n  constructor({ selector }) {\n    this.startBtn = document.querySelector(`${selector} .btn__start`);\n    this.resetBtn = document.querySelector(`${selector} .btn__reset`);\n    this.tenSecBtn = document.querySelector(\n      `${selector} button[data-value=\"10sec\"]`,\n    );\n    this.twentySecBtn = document.querySelector(\n      `${selector} button[data-value=\"20sec\"]`,\n    );\n    this.thirtySecBtn = document.querySelector(\n      `${selector} button[data-value=\"30sec\"]`,\n    );\n    this.wunHourBtn = document.querySelector(\n      `${selector} button[data-value=\"1hours\"]`,\n    );\n    this.wunDayBtn = document.querySelector(\n      `${selector} button[data-value=\"1days\"]`,\n    );\n    this.days = document.querySelector(`${selector} .value[data-value=\"days\"]`);\n    this.hours = document.querySelector(\n      `${selector} .value[data-value=\"hours\"]`,\n    );\n    this.mins = document.querySelector(`${selector} .value[data-value=\"mins\"]`);\n    this.secs = document.querySelector(`${selector} .value[data-value=\"secs\"]`);\n    this.form = document.querySelector(`${selector}`);\n  }\n\n  _setDisabledTimeBtn() {\n    // this.form.childNodes[3].childNodes[1].childNodes.forEach(item => {\n    //   if (item !== 'text') {\n    //     console.log(item);\n    //     // item.setAttribute('disabled', 'disabled');\n    //   }\n    // });\n    this.tenSecBtn.setAttribute('disabled', 'disabled');\n    this.twentySecBtn.setAttribute('disabled', 'disabled');\n    this.thirtySecBtn.setAttribute('disabled', 'disabled');\n    this.wunHourBtn.setAttribute('disabled', 'disabled');\n    this.wunDayBtn.setAttribute('disabled', 'disabled');\n  }\n\n  _removeDisabledBtn() {\n    this.tenSecBtn.removeAttribute('disabled');\n    this.twentySecBtn.removeAttribute('disabled');\n    this.thirtySecBtn.removeAttribute('disabled');\n    this.wunHourBtn.removeAttribute('disabled');\n    this.wunDayBtn.removeAttribute('disabled');\n  }\n\n  _setDisabledStartBtn() {\n    this.startBtn.setAttribute('disabled', 'disabled');\n  }\n\n  _removeDisabledStartBtn() {\n    this.startBtn.removeAttribute('disabled');\n  }\n\n  _setStartTimeValue(ms) {\n    localStorage.setItem('startTimeValue', +ms);\n    this._converToDate(ms);\n  }\n\n  _getStartTimeValue() {\n    return localStorage.getItem('startTimeValue');\n  }\n\n  _setCurrentTimeValue(ms) {\n    localStorage.setItem('currentValue', ms);\n  }\n\n  _getCurrentTimeValue() {\n    return localStorage.getItem('currentValue');\n  }\n\n  _converToDate(ms) {\n    this.days.textContent = `0${parseInt(ms / 1000 / 3600 / 24)}`;\n    this.hours.textContent = this._pad(Math.floor((ms / 1000 / 3600) % 24));\n    this.mins.textContent = this._pad(Math.floor((ms / 1000 / 60) % 60));\n    this.secs.textContent = this._pad(Math.floor((ms / 1000) % 60));\n  }\n\n  _pad(value) {\n    return String(value).padStart(2, 0);\n  }\n\n  _resetTimeValue() {\n    this._toggleStartBtnToStart();\n    this._stopTimer();\n    this._removeDisabledBtn();\n    this.days.textContent = '00';\n    this.hours.textContent = '00';\n    this.mins.textContent = '00';\n    this.secs.textContent = '00';\n\n    localStorage.removeItem('startTimeValue');\n    localStorage.removeItem('currentValue');\n\n    this._setDisabledStartBtn();\n  }\n\n  _stopTimer() {\n    clearInterval(this.intervalId);\n  }\n\n  _countdown() {\n    this.intervalId = setInterval(() => {\n      this.differenceTime = this.countdownTime - Date.now();\n\n      if (this.differenceTime <= 999) {\n        this._resetTimeValue();\n      }\n\n      this._setCurrentTimeValue(this.differenceTime);\n      this._converToDate(this.differenceTime);\n    }, 1000);\n  }\n\n  _startCountdown() {\n    this.countdownTime = +this._getStartTimeValue() + Date.now();\n\n    this._countdown();\n  }\n\n  _continueCountdown() {\n    this.countdownTime = +this._getCurrentTimeValue() + Date.now();\n\n    this._countdown();\n  }\n\n  // startCountdown() {\n  //   this.countdownTime = this.getStartTimeValue + Date.now();\n\n  //   this.interval = setTimeout(function tickTack() {\n  //     this.interval = setTimeout(tickTack, 1000);\n\n  //     this.differenceTime = this.countdownTime - Date.now();\n  //     this.converToDate(this.differenceTime);\n  //   }, 1000);\n  // }\n\n  _toggleStartBtnToPause() {\n    this.startBtn.classList.replace('btn__continue', 'btn__pause');\n    this.startBtn.textContent = 'Пауза';\n  }\n\n  _toggleStartBtnToContinue() {\n    this.startBtn.classList.replace('btn__pause', 'btn__continue');\n    this.startBtn.textContent = 'Продолжить';\n  }\n\n  _toggleStartBtnToStart() {\n    if (this.startBtn.classList.contains('btn__pause')) {\n      this.startBtn.classList.replace('btn__pause', 'btn__start');\n    }\n    if (this.startBtn.classList.contains('btn__continue')) {\n      this.startBtn.classList.replace('btn__continue', 'btn__start');\n    }\n    this.startBtn.textContent = 'Старт';\n  }\n\n  _toggleStartBtnClass() {\n    if (this.startBtn.classList.contains('btn__start')) {\n      this.startBtn.classList.replace('btn__start', 'btn__pause');\n      this._toggleStartBtnToPause();\n      this._startCountdown();\n    } else if (this.startBtn.classList.contains('btn__pause')) {\n      this._toggleStartBtnToContinue();\n      this._stopTimer();\n    } else if (this.startBtn.classList.contains('btn__continue')) {\n      this._toggleStartBtnToPause();\n      this._continueCountdown();\n    }\n  }\n\n  timerInit() {\n    this.form.addEventListener('click', event => {\n      const target = event.target;\n      if (target.nodeName !== 'BUTTON') {\n        return;\n      }\n\n      if (\n        target.dataset.value !== 'start' &&\n        target.dataset.value !== 'reset'\n      ) {\n        const ms = target.dataset.time;\n        this._setStartTimeValue(ms);\n        this._removeDisabledStartBtn();\n      }\n\n      if (target.dataset.value === 'start') {\n        this._setDisabledTimeBtn();\n        this._toggleStartBtnClass();\n      }\n\n      if (target.dataset.value === 'reset') {\n        this._resetTimeValue();\n      }\n    });\n  }\n}\n"],"sourceRoot":""}